Clear-Host

do {
    Write-Host "==============================="
    Write-Host "         Main Menu"
    Write-Host "==============================="
    Write-Host "1: Affiche la version de Windows"
    Write-Host "2: Nombre de processus"
    Write-Host "3: Affiche l'utilisation de la mémoire RAM"
    Write-Host "4: Quitter"
    Write-Host "==============================="

    $choice = Read-Host "Sélectionnez une option (1-4)"

    switch ($choice)
    {
        1 { $Version = (Get-WmiObject Win32_OperatingSystem).Version
            $OS = (Get-WmiObject Win32_OperatingSystem).Caption
            Write-Host "Vous utilisez: $OS / Version: $Version" }
		
        2 { $Process = (Get-Process | Measure-Object).Count
            Write-Host "Il y a $Process processus actifs sur votre machine" }
		
        3 { 
            # Obtenir les informations sur la mémoire
            $memInfo = Get-WmiObject Win32_OperatingSystem
            $totalMem = [math]::Round($memInfo.TotalVisibleMemorySize / 1MB, 2)  # Convertir KB en GB
            $freeMem = [math]::Round($memInfo.FreePhysicalMemory / 1MB, 2)      # Convertir KB en GB
            $usedMem = [math]::Round($totalMem - $freeMem, 2)                    # Calculer la mémoire utilisée
            
            Write-Host "Utilisation de la mémoire RAM:"
            Write-Host "Mémoire totale: $totalMem GB"
            Write-Host "Mémoire utilisée: $usedMem GB"
            Write-Host "Mémoire disponible: $freeMem GB"
        }
		
        4 { Write-Host "En train de quitter ..." }
		
        default { Write-Host "Sélection invalide" }
    }

    # Demande à l'utilisateur d'appuyer sur une touche pour continuer
    if ($choice -ne 4) {
        Write-Host ""
        Read-Host "Appuyez sur Entrée pour continuer..."
    }

    Clear-Host

} while ($choice -ne 4)  # Continue la boucle tant que l'option 4 n'est pas choisie
